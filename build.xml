<project name="xbnjava" default="help" basedir=".">

   <property environment="ENV"/>

<!-- Global properties...START -->
   <!--  Read in the properties file.  -->
   <property file="build.properties"/>

   <property name="fs" value="${file.separator}"/>      <!-- Shortcut -->

   <property name="project_name_fs" value="${project.name}${fs}"/>
   <property name="project_name_with_version" value="${project.name}_${version.number}"/>

   <!-- Ignores base directories -->
   <property name="com_github_xbn" value="com${fs}github${fs}xbn${fs}"/>

   <!-- Uses base directories -->
   <property name="dir_sandbox_parent" value="${sandbox.dir}${fs}"/>
      <property name="dir_sandbox" value="${dir_sandbox_parent}${project_name_fs}"/>
         <property name="dir_sandbox_src" value="${dir_sandbox}src${fs}"/>
            <property name="dir_src_xbn" value="${dir_sandbox_src}${com_github_xbn}"/>
         <property name="dir_sandbox_examples" value="${dir_sandbox}examples${fs}"/>
         <property name="dir_sandbox_test" value="${dir_sandbox}test${fs}"/>

         <property name="dir_sandbox_bldfiles" value="${dir_sandbox}z_build${fs}"/>
            <property name="dir_sandbox_jar_dependencies" value="${dir_sandbox_bldfiles}jar_dependencies${fs}"/>

   <property name="dir_build_parent" value="${build.dir}${fs}"/>
      <property name="dir_classes_xbn" value="${build.class.dir}${fs}${com_github_xbn}"/>
      <property name="dir_build" value="${dir_build_parent}${project_name_with_version}${fs}"/>
      <property name="dir_build_download" value="${dir_build}download${fs}"/>
         <property name="dir_build_docs" value="${dir_build}documentation${fs}"/>
            <property name="dir_build_docs_javadoc" value="${dir_build_docs}javadoc${fs}"/>

      <property name="dir_working" value="${working.dir}${fs}${project_name_fs}"/>

<!-- Global properties...END -->

   <!-- See: http://stackoverflow.com/questions/5103384/ant-warning-includeantruntime-was-not-set
   <property name="includeantruntime" value="false"/> -->

<!-- CLASSPATH and custom tasks...START -->
   <path id="project_classpath">
      <fileset dir="${dir_sandbox_jar_dependencies}" includes="*.jar"/>
<!--
      <fileset dir="${dir_sandbox_bldfiles}jar_dependencies${fs}">
         <include name="commons-collections4-4.0.jar"/>
         <include name="commons-io-2.4.jar"/>
         <include name="commons-lang3-3.3.2.jar"/>
         <include name="junit-4.11.jar"/>
         <include name="codelet_0p1p0_all.jar"/>
      </fileset>
 -->
      <pathelement location="${build.class.dir}"/>
   </path>

   <taskdef name="propfromrplc" classname="com.github.xbn.testdev.ant.ATPropFromRplc" />
<!-- classpathref="project_classpath" -->
<!-- CLASSPATH and custom tasks...END -->
   <target name="help" description="Getting started information">
      <echo>This is the Ant build file for ${project.name}.  Try
ant -projecthelp

Installation of the XBN-Java build process is done in a single step: By changing 'base.dir', in build.properties, to your installation directory.

--To do a full build of XBN-Java--

The *documentation* for both XBN-Java and Template Feather use codelets. But Codelet is based on both XBN-Java and Template Feather. Hence, the rigamarole:
  -1- Build XBN-Java proper (part 1 of 2): pubprecodelet
  -2- Build Template Feather (part 1 of 2): pubprecodelet
  -3- Build Codelet: cleanpublish
  -4- Finish building XBN-Java proper (part 2 of 2): pubpostcodelet
  -5- Finish building Template Feather (part 2 of 2): pubpostcodelet

Documentation for both XBN-Java and Template Feather can be generated before Codelet is built. The example codes will be excluded.</echo>
   </target>

   <property name="dir_sandbox_ant_subxml" value="${dir_sandbox_bldfiles}ant_sub_files${fs}"/>
   <import file="${dir_sandbox_ant_subxml}backup.xml"/>
   <import file="${dir_sandbox_ant_subxml}compile_examples.xml"/>
   <import file="${dir_sandbox_ant_subxml}compile_main.xml"/>
   <import file="${dir_sandbox_ant_subxml}compile_proper.xml"/>
   <import file="${dir_sandbox_ant_subxml}compile_tests.xml"/>
   <import file="${dir_sandbox_ant_subxml}javadoc.xml"/>
   <import file="${dir_sandbox_ant_subxml}refresh.xml"/>
   <import file="${dir_sandbox_ant_subxml}zip.xml"/>

   <!-- For Jeff Epstein only. Does not exist in published version: -->
      <import file="${dir_sandbox_ant_subxml}gitonly_sandbox__execute_from_main_sandbox_only.xml"
         optional="true"/>

   <target name="copycodeletjars" description="Duplicates the 'core' jars files from the Codelet and Template Featherweight build directories.">
      <copy file="${base.dir}\\build\\${codelet_project_name_and_version}\\download\\${codelet_project_name_and_version}_core.jar" todir="${dir_sandbox_jar_dependencies}"/>
      <copy file="${base.dir}\\build\\${templatefeather_project_name_and_version}\\download\\${templatefeather_project_name_and_version}_core.jar" todir="${dir_sandbox_jar_dependencies}"/>
   </target>
   <target name="-autocopycodeletjars" if="do.auto.copy.codelet.jars">
      <antcall target="copycodeletjars"/>
   </target>

   <target name="pubprecodelet" description="compileproper, pubprecodelet2">
      <antcall target="refresh"/>
      <record name="${dir_build}build_log_pre_codelet.txt" action="start"/>
      <antcall target="compileproper"/>
      <antcall target="pubprecodelet2"/>
      <record name="${dir_build}build_log_pre_codelet.txt" action="stop"/>
   </target>

   <target name="pubprecodelet2" description="compileexample, pubprecodelet3">
      <antcall target="compileexample"/>
      <antcall target="pubprecodelet3"/>
   </target>

   <target name="pubprecodelet3" description="compiletests, jar, unit">
      <antcall target="compiletests"/>
      <antcall target="compilebuild"/>
      <antcall target="jar"/>
      <antcall target="unit"/>
   </target>

   <target name="poc" description="Shortcut for pubpostcodelet.">
      <antcall target="pubpostcodelet"/>
   </target>
   <target name="pubpostcodelet" description="compilepostcodelet, doc, zip">
      <record name="${dir_build}build_log_post_codelet.txt" action="start"/>
      <antcall target="-autocopycodeletjars"/>
      <antcall target="compilepostcodelet"/>
      <antcall target="doczip"/>
      <record name="${dir_build}build_log_post_codelet.txt" action="stop"/>
   </target>

   <target name="dz" description="Shortcut for doczip.">
      <antcall target="doczip"/>
   </target>
   <target name="doczip" description="doc, doc2, zip, zip2">
      <record name="${dir_build}javadoc_and_zip_log.txt" action="start"/>
      <antcall target="doc"/>
      <antcall target="doc2"/>
      <antcall target="zip"/>
      <antcall target="zip2"/>
      <record name="${dir_build}javadoc_and_zip_log.txt" action="stop"/>
   </target>

   <target name="unit" description="Executes com.github.xbn.test.UnitTestRunner">
      <java classname="com.github.xbn.test.UnitTestRunner" failonerror="true" classpathref="project_classpath"/>
   </target>

   <!-- See http://ant.apache.org/faq.html#propertyvalue-as-name-for-property -->
   <macrodef name="propertywithdynamicallynamedvalue">
      <attribute name="propname"/>
      <attribute name="valuepropname"/>
      <sequential>
         <property name="@{propname}" value="${@{valuepropname}}"/>
      </sequential>
   </macrodef>

   <target name="pot" description="Shortcut for pubposttabs.">
      <antcall target="pubposttabs"/>
   </target>
   <target name="pubposttabs" description="Jeff Epstein-only replacement for pubprecodelet2. DO NOT USE. See 'compilehelp'.">
      <record name="${dir_build}build_log_post_tabs_pre_codelet.txt" action="start"/>
      <antcall target="pubprecodelet2"/>
      <record name="${dir_build}build_log_post_tabs_pre_codelet.txt" action="stop"/>
   </target>
</project>
